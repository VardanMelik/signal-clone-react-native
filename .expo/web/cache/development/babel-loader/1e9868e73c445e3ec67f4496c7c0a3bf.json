{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useLayoutEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Input, Image, Text } from 'react-native-elements';\nimport { auth } from \"../firebase\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUrl = _useState8[0],\n      setImageUrl = _useState8[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headBackTitle: \"Back to Login\"\n    });\n  }, [navigation]);\n\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {}).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"light\"\n  }), React.createElement(Text, {\n    h3: true,\n    style: {\n      marginBottom: 50\n    }\n  }, \"Create a Signal account\"), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(Input, {\n    placeholder: \"Full Name\",\n    autoFocus: true,\n    type: \"text\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Profile Picture URL (optional)\",\n    type: \"text\",\n    value: imageUrl,\n    onChangeText: function onChangeText(text) {\n      return setImageUrl(text);\n    },\n    onSubmitEditing: register\n  })), React.createElement(Button, {\n    containerStyle: styles.button,\n    raised: true,\n    title: \"Register\",\n    onPress: register\n  }), React.createElement(View, {\n    style: {\n      height: 100\n    }\n  }));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["D:/Vardan Work Folder/signal clone/screens/RegisterScreen.js"],"names":["StatusBar","React","useState","useLayoutEffect","Button","Input","Image","Text","auth","RegisterScreen","navigation","name","setName","email","setEmail","password","setPassword","imageUrl","setImageUrl","setOptions","headBackTitle","register","createUserWithEmailAndPassword","then","authUser","catch","error","alert","message","styles","container","marginBottom","inputContainer","text","button","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","width","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar'\r\nimport React, { useState, useLayoutEffect } from 'react'\r\nimport { KeyboardAvoidingView, StyleSheet, View } from 'react-native'\r\nimport { Button, Input, Image, Text } from 'react-native-elements'\r\nimport { auth } from '../firebase'\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [imageUrl, setImageUrl] = useState('')\r\n\r\n    useLayoutEffect( () => {\r\n        navigation.setOptions({\r\n            headBackTitle: \"Back to Login\",\r\n        })\r\n    }, [navigation])\r\n\r\n    const register = () => {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then( authUser => {} )\r\n        .catch( error => alert(error.message) )\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior=\"padding\" style={styles.container}\r\n        >\r\n            <StatusBar style=\"light\" />\r\n            <Text h3 style={{ marginBottom: 50 }}>\r\n                Create a Signal account\r\n            </Text>\r\n            <View style={styles.inputContainer}>\r\n                <Input \r\n                    placeholder=\"Full Name\"\r\n                    autoFocus\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChangeText={\r\n                        text => setName(text)\r\n                    }\r\n                />\r\n                <Input \r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChangeText={\r\n                        text => setEmail(text)\r\n                    }\r\n                />\r\n                <Input \r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    secureTextEntry\r\n                    value={password}\r\n                    onChangeText={\r\n                        text => setPassword(text)\r\n                    }\r\n                />\r\n                <Input \r\n                    placeholder=\"Profile Picture URL (optional)\"\r\n                    type=\"text\"\r\n                    value={imageUrl}\r\n                    onChangeText={\r\n                        text => setImageUrl(text)\r\n                    }\r\n                    onSubmitEditing={\r\n                        register\r\n                    }\r\n                />\r\n            </View>\r\n            <Button\r\n                containerStyle={styles.button}\r\n                raised\r\n                title=\"Register\"\r\n                onPress={register}\r\n            />\r\n            <View style={{ height: 100 }} />\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 10,\r\n        backgroundColor: 'white'\r\n    },\r\n    inputContainer: {\r\n        width: 300\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}